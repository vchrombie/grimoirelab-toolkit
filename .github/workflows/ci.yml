name: build

on: [push, pull_request]

jobs:
  tests:
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          pip install --upgrade setuptools==49.6.0
          pip install --upgrade pip==18.1
          pip install --upgrade wheel
          pip install -r "requirements.txt"
          pip install -r "requirements_tests.txt"
          pip install flake8 coveralls
      
      - name: Install
        run: ./setup.py install
      
      - name: Lint with flake8
        run: |
          flake8 .
      
      - name: Tests and Coverage
        run: |
          cd tests
          coverage run --source=grimoirelab_toolkit run_tests.py
          coveralls
        env:
          COVERALLS_PARALLEL: true
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  
  # Send notification when all tests have finished to combine coverage results
  coveralls:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true


#       - name: Tests and Coverage
#         run: |
#           cd tests
#           coverage run --source=grimoirelab_toolkit run_tests.py
#           coveralls
#         env:
#           COVERALLS_PARALLEL: true
#           COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  
#   # Send notification when all tests have finished to combine coverage results
#   coveralls:
#     needs: tests
#     runs-on: ubuntu-latest
#     container: python:3-slim
#     steps:
#     - name: Coveralls Finished
#       run: |
#         pip install --upgrade coveralls
#         coveralls --finish
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
